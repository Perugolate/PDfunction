source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/newtonmethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
psizero<-function(doseB){
psi(psimax=0.04672,alpha=-15,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=0.38,KB=1.23)
}
psizero<-function(doseB){
psi(psimax=0.04672,alpha=-50,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=0.38,KB=1.23)
}
psizero(1000)
psizero(1000000000)
psizero(10000000000000000000000000000000000000000000000000000000000000000)
psizero(1)
psizero(100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
psizero(100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
psizero<-function(doseB){
psi(psimax=0.04672,alpha=-500,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=0.38,KB=1.23)
}
psizero(100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
psizero(10000000000000000000000000000000000000000000000000000000000000000000000)
psizero(10000000000000000000000000000)
psizero(1)
psizero<-function(doseB){
psi(psimax=0.04672,alpha=-50,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=0.38,KB=1.23)
}
psizero(1)
psizero(1:100)
psizero(1:1000)
psizero(0:1000)
psizero(0:10000000)
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
psizero<-function(doseB){
psi(psimax=0.04672,alpha=-1000,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=MICB,KB=1.23)
}
psizero(-1000:1000)
psizero(-100:0)
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
psizero(-100:0)
psizero<-function(doseB){
psi(psimax=0.04672,alpha=22,psiminA=-0.125,A=i,MICA=MICA,KA=0.925,psiminB=-0.145,B=doseB,MICB=MICB,KB=1.23)
}
psizero(-100:0)
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
psizero<-function(alpha){
psi(psimax=0.04672,alpha=0,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero
psizero(1)
psizero(100)
psizero<-function(alpha){
psi(psimax=0.04672,alpha=alpha,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero(3)
psizero(4)
psizero(-100)
psizero(-1)
psizero(-10)
psizero(-100)
psizero(-22)
psizero(-21)
psizero(-22)
psizero(100)
psizero(1000)
psizero(1000000000)
psizero(-100)
psizero(0)
psizero<-function(alpha){
psi(psimax=0,alpha=alpha,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero(0)
psizero<-function(alpha){
psi(psimax=0,alpha=alpha,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero(22)
psizero(-22)
psizero<-function(alpha){
psi(psimax=0,alpha=alpha,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero(10000)
psizero(-1000000)
psizero<-function(alpha){
psi(psimax=1,alpha=alpha,psiminA=-0.125,A=1,MICA=1,KA=0.925,psiminB=-0.145,B=1,MICB=1,KB=1.23)
}
psizero(-1000000)
psizero(-22)
psizero(0)
psizero(0.5)
psizero(5)
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
https://github.com/sunnivas/ABinteractions.git
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/bisection/bisection_simplemethod.R')
source('//ifik.unibe.ch/users/Homes/sfoerster/Desktop/response-surface/newton/optim.R')
#!/usr/bin/Rscript
library("gplots")
library("bmd")
library("gplots")
library("splines")
library("plyr")
library("emdbook")
Sys.setlocale(locale="C") # Fixes "input string X is invalid in this locale"
outdir <- "testoutput"
sourcefilepattern<-".txt$"
testfolders <- c("testdata")
test <- function(){
source("4in1skript_ankervariation_backup.R")
for (testfolder in testfolders) {
files <- list.files(path=testfolder, pattern = sourcefilepattern, all.files = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE)
#print(files)
#for (thisfile in files){
thisfile = "Geldanamycin_k.txt"
#thisfile = "BIBF_k.txt"
nr <- as.integer(sub(unlist(strsplit(thisfile, "_"))[5], pattern=".txt", replacement=""))
myData <- read.table(paste(testfolder,"/",thisfile,sep=""),header=TRUE)
myData <- myData[, c("dose","response","experiment")]
doseunit <- "Concentration"
od <- paste(outdir, sep="/")
dir.create(od, recursive=TRUE, showWarnings=FALSE)
plotname <- paste(od, sub(".txt",".png", thisfile), sep="/") # for the plots
outname <- sub(".txt","",thisfile) # for the tables
outname <- sub("_", " ", outname)
outname <- paste(od,"/",outname, sep="")
doseunit<-paste("Concentration [AU]",sep="")
simulation = TRUE
nsteps = 100
figures=FALSE
# Simulation
if (simulation) {
for (plotnr in 1:nsteps) {
try(processData(myData,outname,doseunit,plotname,run=4,plotnr,nsteps,figures=figures))
}
} else {
try(processData(myData, outname, doseunit, plotname, run=4, plotnr=0, figures=figures))
}
}
}
check.for.updates.R()
install.packages("installr")
library(installr)
install.packages("installr")
library(installr)
check.for.updates.R()
install.R()
copy.packages.between.libraries()
check.for.updates.R()
library(installr)
check.for.updates.R()
library(installr)
check.for.updates.R()
}
library("R2wd") #of course, you must install it before!
#require("rcom")
wdGet() #To open a new Word document
installstatconnDCOM()
install.packages("rcom")
library(rcom)
install.packages("rcom")
install.packages(c("rscproxy","rcom"),repos="http://rcom.univie.ac.at/download",lib=.Library)
library(rcom)
detach("package:rcom", unload=TRUE)
library("rcom", lib.loc="C:/Program Files/R/R-3.1.1/library")
copy.packages.between.libraries()
# installing/loading the package:
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
copy.packages.between.libraries()
install.packages("rcom")
install.packages("C:/Users/sfoerster/Downloads/rcom_2.3-1.zip", repos = NULL)
library("rcom", lib.loc="C:/Program Files/R/R-3.1.1/library")
detach("package:rcom", unload=TRUE)
library("rcom", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages(c("rscproxy","rcom"),repos="http://rcom.univie.ac.at/download",lib=.Library)
library(rcom)
comRegisterRegistry()
install.packages(c("rscproxy","rcom"),repos="http://rcom.univie.ac.at/download",lib=.Library)
library(rcom)
comRegisterRegistry()
install.packages(c("rscproxy", "rcom"), repos = "http://rcom.univie.ac.at/download",
)
)
### Fitting Gompertz growth curves###
#read in data
setwd("C:/users/sfoerster/ABinteractions/Time_kill")
curves=read.table("input/Growth_GW_short.txt",header=T)
#calculate colony forming units from counts
CFU <- curves$Count*curves$Dilution*100
datatemp <- data.frame(curves$Strain,curves$Count,curves$Dilution,curves$Time,CFU,curves$Experiment)
data <- data.frame(datatemp)
names(data) <- c("strain","count","dilution","time","CFU","exp")
strains <- sort(levels(data$strain))
#data <- subset(data, exp == i,select=c(CFU, time,strain))
for (i in strains){
pdf(paste(i,"short.pdf",sep=""))
y=data$CFU[data$strain==i]
print("-------------------------")
print(y)
x=data$time[data$strain==i]
print(x)
y=log(y)
guess <- guessCellGrowthParams(x,y,relative.height.at.lag=0.2)
pars<-c(mu=guess$mu,l=guess$l,z0=guess$z0,zmax=guess$zmax)
#gomfit<-gompertz(x=x,mu=guess$mu,l=guess$l,z0=guess$z0,zmax=guess$zmax)
#fit2 <- optim(pars,ssr,gr=NULL,dat,hessian=TRUE)
fit <- nls(y~gompertz(x,mu,l,z0,zmax),start=guess)
print(fit)
xnew=list(x=seq(min(x),max(x),length.out=1000))
ypredict=exp(predict(fit,xnew))
plot(data$time[data$strain==i],data$CFU[data$strain==i],main=paste(i,"Gompertz growth model"),xlab="time[h]",ylab="bacteria[CFU/ml]",type="n",log="y")
#points(x,y,col=c("black","red","green","blue"))
for(j in unique(data$exp)){
newdata <- subset(data, exp == j& strain==i,select=c(CFU,time,strain,exp))
points(newdata$time,newdata$CFU,col=c(j+1),cex=1.5)
}
lines(xnew$x,ypredict)
mu=round(coef(fit)[[1]],2)
zmax=exp(round(coef(fit)[[4]],0))
zmax=formatC(zmax,digits=2,format="E")
legend("topleft",c(paste("growth rate [per hour]:",mu),paste("asymptote [CFU/ml]:",zmax)))
#Plotting the fitted function to the data
dev.off()
}
library("grofit", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("cellGrowth", lib.loc="C:/Program Files/R/R-3.1.1/library")
### Fitting Gompertz growth curves###
#read in data
setwd("C:/users/sfoerster/ABinteractions/Time_kill")
curves=read.table("input/Growth_GW_short.txt",header=T)
#calculate colony forming units from counts
CFU <- curves$Count*curves$Dilution*100
datatemp <- data.frame(curves$Strain,curves$Count,curves$Dilution,curves$Time,CFU,curves$Experiment)
data <- data.frame(datatemp)
names(data) <- c("strain","count","dilution","time","CFU","exp")
strains <- sort(levels(data$strain))
#data <- subset(data, exp == i,select=c(CFU, time,strain))
for (i in strains){
pdf(paste(i,"short.pdf",sep=""))
y=data$CFU[data$strain==i]
print("-------------------------")
print(y)
x=data$time[data$strain==i]
print(x)
y=log(y)
guess <- guessCellGrowthParams(x,y,relative.height.at.lag=0.2)
pars<-c(mu=guess$mu,l=guess$l,z0=guess$z0,zmax=guess$zmax)
#gomfit<-gompertz(x=x,mu=guess$mu,l=guess$l,z0=guess$z0,zmax=guess$zmax)
#fit2 <- optim(pars,ssr,gr=NULL,dat,hessian=TRUE)
fit <- nls(y~gompertz(x,mu,l,z0,zmax),start=guess)
print(fit)
xnew=list(x=seq(min(x),max(x),length.out=1000))
ypredict=exp(predict(fit,xnew))
plot(data$time[data$strain==i],data$CFU[data$strain==i],main=paste(i,"Gompertz growth model"),xlab="time[h]",ylab="bacteria[CFU/ml]",type="n",log="y")
#points(x,y,col=c("black","red","green","blue"))
for(j in unique(data$exp)){
newdata <- subset(data, exp == j& strain==i,select=c(CFU,time,strain,exp))
points(newdata$time,newdata$CFU,col=c(j+1),cex=1.5)
}
lines(xnew$x,ypredict)
mu=round(coef(fit)[[1]],2)
zmax=exp(round(coef(fit)[[4]],0))
zmax=formatC(zmax,digits=2,format="E")
legend("topleft",c(paste("growth rate [per hour]:",mu),paste("asymptote [CFU/ml]:",zmax)))
#Plotting the fitted function to the data
dev.off()
}
graphics.off()
setwd("C:/users/sfoerster/ABinteractions/Time_kill")
curves=read.table("input/Growth_GW_short.txt",header=T)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
detach("package:cellGrowth", unload=TRUE)
library("cellGrowth", lib.loc="C:/Program Files/R/R-3.1.1/library")
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
strains
i
j
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
pchList
pchList[1]
pchList[2]
pchList[3]
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
subdata
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regression
regdata$CFU
regdata$time
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regdata
?regdata
?regdata
regdata
?lm
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regression
?predict
x_reg <- c(4:12,by=100)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
y_reg
regression <- lm(regdata$time[regdata$strain==i]~regdata$CFU[regdata$strain==i])
x_reg <- c(4:12,by=100)
y_reg <- predict(regression,x_reg)
regression
x_reg <- c(4:12,by=100)
x_reg
x_reg <- seq(4:12,by=100)
x_reg <- seq(from=4:12,by=100)
?seq
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x_reg <- seq(from=4,to=12,by=100)
x_reg
x_reg <- seq(from=4,to=12,by=100)
x_reg
x_reg <- seq(from=4,to=12,length.out=100)
x_reg
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x_reg <- seq(from=4,to=12,length.out=100)
y_reg <- predict(regression,x_reg)
x_reg
x_reg <- seq(from=4,to=12,length.out=100)
y_reg <- predict(regression,x_reg)
?predict
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
predict(regression)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
y_reg
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
y_reg
xreg
x_reg
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x_reg
head(x_reg)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regression <- lm(log(regdata$CFU[regdata$strain==i])~regdata$time[regdata$strain==i])
x_reg <- data.frame(x=seq(from=4,to=12,length.out=1000))
y_reg <- exp(predict(regression,newdata=x_reg$x,se.fit = TRUE))
regression
new <- data.frame(x = seq(-3, 3, 0.5))
new
y_reg <- exp(predict(regression,x_reg,se.fit = TRUE))
y_reg <- exp(predict(regression,new,se.fit = TRUE))
y_reg <- exp(predict(regression,x_reg,se.fit = TRUE))
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regdata
x
y
i
regdata$CFU[regdata$strain==i]
regdata$time[regdata$strain==i]
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
regression
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x_reg
xreg$x
head(xreg$x)
head(x_reg$x)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
y_reg
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
x1
y1
new
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
predict(lm(y1 ~ x1), new, se.fit = TRUE)
source('C:/Users/sfoerster/ABinteractions/Time_kill/GrowthCurves/skript/growthcurves_paper.R')
